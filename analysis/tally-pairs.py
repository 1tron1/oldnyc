#!/usr/bin/python

import cPickle

# generated by analysis/sf_streets.py
records = cPickle.load(file('/tmp/sf-crossstreets.pickle'))
print 'Loaded %d records' % len(records)

pairs = []  # (street1, street2) -- in alphabetical order!
addresses = []  # e.g. 7142 market street
tinies = []  # e.g. Balance street
for rec in records:
  id, street1, cross = rec
  if not cross: continue

  # first check for an address
  addy = [x for x in cross if x.startswith("address:")]
  if addy:
    assert 1 == len(addy)
    addresses.append(addy[0].replace("address:", ""))
    continue

  block = [x for x in cross if x.startswith("block:")]
  if block:
    assert 1 == len(block)
    b = int(block[0].split(":")[1])
    assert 0 == b % 100
    addresses.append(str(b + 50) + ' ' + street1)
    print addresses[-1]

  # next check if it's just a tiny
  if len(cross) == 1 and cross[0].startswith("tiny:"):
    tinies.append(cross[0].replace("tiny:", ""))
    continue

  for c_street in [c for c in cross if not c.startswith("tiny:")]:
    pair = [c_street, street1]
    pair.sort()
    pairs.append('\t'.join(pair))

print 'Pairs: %d' % len(set(pairs))
print 'Addresses: %d' % len(set(addresses))
print 'Tinies: %d' % len(set(tinies))

# -> 1342 things to look up via the geocoding API.
